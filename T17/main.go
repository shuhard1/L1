package main

import "fmt"

//Бинарный поиск — тип поискового алгоритма, который последовательно
//делит пополам заранее отсортированный массив данных, чтобы обнаружить нужный элемент
func binarySearch(i int, sl []int) bool {

	//мин индекс
	low := 0
	//макс индекс
	high := len(sl) - 1

	for low <= high {
		//получаем индекс срединного элемента
		mid := (low + high) / 2

		//Сравниваем срединный элемент с заданным искомым элементом.
		//Если искомое число больше среднего — продолжаем поиск в правой части массива
		if sl[mid] < i {
			low = mid + 1
		} else { //Если же заданное число меньше — алгоритм продолжит поиск в левой части массива
			high = mid - 1
		}
	}

	//если искомое число оказалось больше, чем все числа в слайсе
	//или искомое число оказалось меньше, чем все числа в слайсе
	if low == len(sl) || sl[low] != i {
		return false
	}

	return true
}

func main() {
	//уже отсортированный массив
	items := []int{1, 2, 9, 20, 31, 45, 63, 70, 100}
	fmt.Println(binarySearch(63, items))
}
